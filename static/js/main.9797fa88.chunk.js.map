{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","management/reducer.tsx","management/GlobalContextProvider.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","IMG_URL","imgUrl","_jsxs","className","children","_jsx","src","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","reducer","state","action","type","_objectSpread","query","payload","isMovie","showError","concat","_toConsumableArray","initialState","StateContext","React","createContext","DispatchContext","GlobalContextProvider","_useReducer","useReducer","_useReducer2","_slicedToArray","dispatch","Provider","value","FindMovie","_useContext","useContext","_Fragment","onSubmit","e","preventDefault","fetch","then","res","json","catch","Response","Error","getMovie","Title","Plot","Poster","imdbID","htmlFor","id","placeholder","cn","onChange","target","disabled","length","onClick","some","m","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9797fa88.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => {\n  const IMG_URL = movie.imgUrl !== 'N/A'\n    ? movie.imgUrl\n    : 'https://via.placeholder.com/360x270.png?text=no%20preview';\n\n  return (\n    <div className=\"card\" data-cy=\"movieCard\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            data-cy=\"moviePoster\"\n            src={IMG_URL}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movieTitle\">\n              {movie.title}\n            </p>\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"movieDescription\">\n          {movie.description}\n          <br />\n          <a href={movie.imdbUrl} data-cy=\"movieURL\">\n            IMDB\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { Movie } from '../types/Movie';\nimport { State } from '../types/State';\n\nexport type Action =\n  | { type: 'getMovie', payload: Movie }\n  | { type: 'searchText', payload: string }\n  | { type: 'addMovie', payload: Movie }\n  | { type: 'isMovie', payload: boolean }\n  | { type: 'showError', payload: boolean }\n  | { type: 'clearMovie' };\n\nexport function reducer(state: State, action: Action): State {\n  switch (action.type) {\n    case 'searchText':\n      return {\n        ...state,\n        query: action.payload,\n      };\n\n    case 'isMovie':\n      return {\n        ...state,\n        isMovie: action.payload,\n      };\n\n    case 'showError':\n      return {\n        ...state,\n        showError: action.payload,\n      };\n\n    case 'getMovie':\n      return {\n        ...state,\n        movie: action.payload,\n      };\n\n    case 'addMovie':\n      if (state.movie) {\n        return {\n          ...state,\n          movies: [...state.movies, state.movie],\n          movie: null,\n          query: '',\n          isMovie: false,\n        };\n      }\n\n      return state;\n\n    case 'clearMovie':\n      return {\n        ...state,\n        movie: null,\n      };\n\n    default:\n      return state;\n  }\n}\n","import React, { useReducer } from 'react';\nimport { Action, reducer } from './reducer';\nimport { State } from '../types/State';\n\nconst initialState: State = {\n  movies: [],\n  movie: null,\n  query: '',\n  isMovie: false,\n  showError: false,\n};\n\nexport const StateContext = React.createContext(initialState);\nexport const DispatchContext\n  = React.createContext<React.Dispatch<Action>>(() => {});\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const GlobalContextProvider: React.FC<Props> = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <DispatchContext.Provider value={dispatch}>\n      <StateContext.Provider value={state}>\n        {children}\n      </StateContext.Provider>\n    </DispatchContext.Provider>\n  );\n};\n","import React, { useContext } from 'react';\nimport cn from 'classnames';\nimport './FindMovie.scss';\nimport {\n  DispatchContext,\n  StateContext,\n} from '../../management/GlobalContextProvider';\nimport { getMovie } from '../../api';\nimport { MovieCard } from '../MovieCard';\n\nexport const FindMovie: React.FC = () => {\n  const {\n    query,\n    movies,\n    movie,\n    isMovie,\n    showError,\n  } = useContext(StateContext);\n  const dispatch = useContext(DispatchContext);\n\n  const searchMovie = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    dispatch({ type: 'clearMovie' });\n    dispatch({ type: 'isMovie', payload: true });\n    getMovie(query).then(res => {\n      if ('Title' in res) {\n        dispatch({\n          type: 'getMovie',\n          payload: {\n            title: res.Title,\n            description: res.Plot,\n            imgUrl: res.Poster,\n            imdbId: res.imdbID,\n            imdbUrl: `https://www.imdb.com/title/${res.imdbID}`,\n          },\n        });\n        dispatch({ type: 'isMovie', payload: false });\n      } else {\n        dispatch({ type: 'isMovie', payload: false });\n        dispatch({ type: 'showError', payload: true });\n      }\n    });\n  };\n\n  const hendleClickAddMovie = () => {\n    if (movie) {\n      const dobleMovie = movies.some(m => m.imdbId === movie.imdbId);\n\n      if (!dobleMovie) {\n        dispatch({ type: 'addMovie', payload: movie });\n      } else {\n        dispatch({ type: 'clearMovie' });\n        dispatch({ type: 'searchText', payload: '' });\n      }\n    }\n  };\n\n  const hendleSearchChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch({ type: 'searchText', payload: e.target.value });\n    dispatch({ type: 'showError', payload: false });\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={searchMovie}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              value={query}\n              className={cn('input', {\n                'is-danger': showError,\n              })}\n              onChange={hendleSearchChange}\n            />\n          </div>\n\n          {showError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              disabled={query.length === 0}\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={cn('button is-light', {\n                'is-loading': isMovie,\n              })}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            {movie && (\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={hendleClickAddMovie}\n              >\n                Add to the list\n              </button>\n            )}\n          </div>\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=f899920d';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import React, { useContext } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { StateContext } from './management/GlobalContextProvider';\n\nexport const App: React.FC = () => {\n  const { movies } = useContext(StateContext);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\n\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\nimport { GlobalContextProvider } from './management/GlobalContextProvider';\n\nReactDOM.render(\n  <GlobalContextProvider>\n    <App />\n  </GlobalContextProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}